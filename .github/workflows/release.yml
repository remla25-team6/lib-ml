name: Create GitHub Release
on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Parse version info from tag
        run: |
          # GITHUB_REF is like refs/tags/v2.3.5, so strip the first 11 chars
          VERSION=${GITHUB_REF:11}
          MAJOR=$(echo "$VERSION" | cut -d . -f 1)
          MINOR=$(echo "$VERSION" | cut -d . -f 2)
          PATCH=$(echo "$VERSION" | cut -d . -f 3)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV

      - name: Update version in pyproject.toml
        run: |
          # Replace the version in pyproject.toml
          sed -i "s/^version = \".*\"/version = \"${{ env.version }}\"/" pyproject.toml
          cat pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          pip install .

      - name: Build package
        run: python -m build
        env:
          VERSION: ${{ env.version }}
          MAJOR: ${{ env.version_major }}
          MINOR: ${{ env.version_minor }}
          PATCH: ${{ env.version_patch }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          name: Release ${{ env.version }}
          body: |
            Release version ${{ env.version }}
            
            ## Installation
            ```
            pip install git+https://github.com/${{ github.repository }}@v${{ env.version }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}